{"version":3,"sources":["meteor://ğŸ’»app/imports/api/pontos.js","meteor://ğŸ’»app/server/main.js"],"names":["module","export","Pontos","Mongo","import","v","check","Meteor","Collection","isServer","publish","pontosPublication","find","methods","userId","Error","insert","username","user","owner","checked","dateIn","Date","pontoId","String","dateOut","hours","Math","abs","update","$set","horasAtual","mult","t","obj","aggregate","$match","$group","_id","total","$sum","scope","remove","_dropCollection","startup"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\nimport { Meteor } from 'meteor/meteor';\r\n\r\nexport const Pontos = new Mongo.Collection('pontos');\r\n\r\nif (Meteor.isServer) {\r\n    // This code only runs on the server\r\n    Meteor.publish('pontos', function pontosPublication() {\r\n      return Pontos.find({});\r\n    });\r\n}\r\n\r\nMeteor.methods({\r\n    'pontos.pontoIn'() {\r\n\r\n        if(! Meteor.userId()) {\r\n            throw new Meteor.Error('not-authorized');\r\n        }\r\n\r\n        Pontos.insert({\r\n            username: Meteor.user().username,\r\n            owner: Meteor.userId(),\r\n            checked: true,\r\n            dateIn: new Date(),\r\n        });\r\n\r\n    },\r\n    'pontos.pontoOut'(dateIn, pontoId) {\r\n        check(pontoId, String);\r\n\r\n        var dateOut = new Date();\r\n        var hours = Math.abs(dateIn - dateOut) / 36e5;\r\n        //criar multiplicador para salario dentro do usuario;\r\n\r\n        Pontos.update(pontoId, { $set: { checked: false,\r\n                dateOut: dateOut,\r\n                horasAtual: hours,\r\n            }\r\n        });\r\n    },\r\n    'pontos.retornaTotal'(mult) {\r\n\r\n        var t;\r\n        var obj = Pontos.aggregate([\r\n          { $match: { username: Meteor.user().username } },\r\n          { $group: { _id: null, total: { $sum: \"$horasAtual\" } } }\r\n        ]);\r\n        t = obj[0].total * mult;\r\n\r\n        return t;\r\n    },\r\n    'pontos.dropPontos'(scope) {\r\n        check(scope, String);\r\n\r\n        // TODO jogar para outra collection -> manter dados como registro.\r\n\r\n        if(scope == \"own\") {\r\n            Pontos.remove({ username: Meteor.user().username });\r\n        }\r\n        else if (scope == \"all\") {\r\n            Pontos._dropCollection();\r\n        }\r\n    }\r\n\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport '../imports/api/pontos.js';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n});\r\n"]}